name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --max-line-length=88 --extend-ignore=E203,W503 --count --show-source --statistics

    - name: Format check with black
      run: |
        black --check src/ tests/ --line-length=88

    - name: Import sort check with isort
      run: |
        isort --check-only src/ tests/ --profile=black

    - name: Type check with mypy
      run: |
        mypy src/ --ignore-missing-imports --no-strict-optional
      continue-on-error: true  # Don't fail CI on type errors initially

    - name: Security check with bandit
      run: |
        bandit -r src/ -f json -o bandit-report.json
      continue-on-error: true  # Don't fail CI on security warnings initially

    - name: Run unit tests
      run: |
        pytest tests/ -v -m "unit or not integration" --cov=src --cov-report=xml --cov-report=term-missing

    - name: Run integration tests
      run: |
        pytest tests/ -v -m "integration" --cov=src --cov-report=xml --cov-report=term-missing
      continue-on-error: true  # Integration tests might fail without real data

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  quality-gate:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run comprehensive test suite
      run: |
        pytest tests/ --cov=src --cov-report=xml --cov-fail-under=80

    - name: Generate coverage badge
      run: |
        coverage-badge -o coverage.svg
      continue-on-error: true
